def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    compileSdkVersion 29

    lintOptions {
        disable 'InvalidPackage'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.freestar.ads.flutter.freestar_flutter_plugin_example"
        minSdkVersion 19
        targetSdkVersion 29
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        multiDexEnabled true
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.debug
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    implementation 'androidx.annotation:annotation:1.1.0'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation 'androidx.multidex:multidex:2.0.1'

    implementation fileTree(dir: 'libs', include: ['*.jar'])

    //begin Freestar
    implementation 'com.freestar.android.ads:freestar:4.2.0'
    implementation 'com.freestar.android.ads.admob:freestar-admob-adapter:19.6.0.1'
    implementation 'com.freestar.android.ads.applovin:freestar-applovin-adapter:9.14.8.2'
    //implementation 'com.freestar.android.ads.amazon:freestar-amazon-adapter:6.0.0.0'
    implementation 'com.freestar.android.ads.tam:freestar-tam-adapter:8.4.3.0'
    implementation 'com.freestar.android.ads.adcolony:freestar-adcolony-adapter:4.4.1.1'
    implementation 'com.freestar.android.ads.google:freestar-google-adapter:19.6.0.4'
    implementation 'com.freestar.android.ads.criteo:freestar-criteo-adapter:4.2.1.1'
    implementation 'com.freestar.android.ads.unityads:freestar-unity-adapter:3.7.1.1'
    implementation 'com.freestar.android.ads.vungle:freestar-vungle-adapter:6.7.0'
    implementation 'com.freestar.android.ads.facebook:freestar-facebook-adapter:6.1.0.0'
    implementation 'com.freestar.android.ads.tapjoy:freestar-tapjoy-adapter:12.2.1'
    implementation 'com.freestar.android.ads.mopub:freestar-mopub-adapter:5.16.4.1'
    implementation 'com.freestar.android.ads.nimbus:freestar-nimbus-adapter:1.9.1.1'

    implementation 'com.applovin:applovin-sdk:9.14.8'
    implementation 'com.criteo.publisher:criteo-publisher-sdk:4.2.1'
    implementation 'com.google.android.gms:play-services-ads:19.6.0' //11.0.4 minimum is required, 16.0.0 or newer recommended!
    implementation('com.google.android.ads.consent:consent-library:1.0.8') {
        exclude group: 'com.android.support'
        exclude group: 'com.google.code.gson', module: 'gson'
    }
    implementation('com.facebook.android:audience-network-sdk:6.2.1') {
        exclude group: 'com.google.android.exoplayer'
        exclude group: 'com.google.android.gms'
        exclude group: 'com.android.support'
    }
    implementation 'com.tapjoy:tapjoy-android-sdk:12.4.2@aar'
    implementation('com.github.vungle:vungle-android-sdk:6.7.0') {
        exclude group: 'com.android.support'
    }
    implementation('com.mopub:mopub-sdk:5.16.4@aar') {
        transitive = true
        exclude group: 'com.android.support'
    }

    implementation 'com.amazon.android:aps-sdk:8.4.3@aar'

    //Note: if you are using Preroll, un-comment the following lines:
    //start preroll
    implementation 'com.google.ads.interactivemedia.v3:interactivemedia:3.23.0'
    implementation 'com.google.android.exoplayer:exoplayer-core:2.13.3'
    implementation 'com.google.android.exoplayer:exoplayer-ui:2.13.3'
    implementation 'com.google.android.exoplayer:extension-ima:2.13.3'
    //end preroll

    //end, FreeStar

    implementation "com.github.bumptech.glide:glide:4.11.0"
    implementation "com.google.code.gson:gson:2.8.5"

    //nimbus
    implementation "com.adsbynimbus.android:nimbus:1.9.1" // Full Nimbus SDK with NimbusAdManager
    implementation "com.adsbynimbus.android:extension-okhttp:1.9.1" // Use OkHttp with NimbusAdManager

}
